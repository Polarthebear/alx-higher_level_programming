Module for 3-say_my_name.py
==============================

Module defines a name-printing function ``say_my_name(first_name, last_name="")``.

Usage:
======

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Beta", "Shigos")
    My name is Beta Shigos

::
    >>> say_my_name("Mac Gee", "Avril")
    My name is Mac Gee Avril

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Beta")
    My name is Beta 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "John")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("MeCalister", ["Cavs", "Bakers", "Heat"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Cyril": 6, "Ramaphosa": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
